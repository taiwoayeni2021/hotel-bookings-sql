-- HOTEL SQL ANALYSIS PROJECT
-- Author: Ayeni Taiwo
-- Description: This script performs analysis on hotel bookings data,
-- including revenue, occupancy trends, customer behavior, and more.
-- SQL Dialect: PostgreSQL
-- Date:Â 2025-05-20


--To create a table
CREATE TABLE hotel(
	booking_id VARCHAR(255) PRIMARY KEY,
	date DATE,
	customer_type VARCHAR(255),
	room_type VARCHAR(255),
	booking_source VARCHAR(255),
	nights_stayed INT,
	total_amount INT,
	occupancy_rate DECIMAL(5,2),
	hotel_branch VARCHAR(255),
	guest_country VARCHAR(255)
);

--Import the csv file using Import/Export Data option

--To view my data
SELECT * FROM hotel;

--REVENUE ANALYSIS
--1. Total Revenue generated by the hotel
SELECT SUM(total_amount) total_revenue
FROM hotel;

--2. Best performing hotel branch by Revenue
SELECT hotel_branch, SUM(total_amount) total_revenue
FROM hotel
GROUP BY hotel_branch
ORDER BY total_revenue DESC
LIMIT 1;

--3. Average Revenue per Booking
SELECT ROUND(AVG(total_amount), 2) average_revenue_per_booking
FROM hotel;

--4. Best performing room type by Revenue
SELECT room_type best_performing_room_type_by_revenue, SUM(total_amount) total_revenue
FROM hotel
GROUP BY room_type
ORDER BY total_revenue DESC
LIMIT 1;

--5. Top country by Revenue
SELECT guest_country top_country_by_revenue, SUM(total_amount) total_revenue
FROM hotel
GROUP BY guest_country
ORDER BY total_revenue DESC
LIMIT 1;

--BOOKING AND OCCUPANCY TRENDS
--1. Average lenght of stay per customer type
SELECT customer_type, ROUND(AVG(nights_stayed), 2) average_lenght_of_stay
FROM hotel
GROUP BY customer_type
ORDER BY average_lenght_of_stay DESC;

--2. Month with Highest revenue
SELECT TO_CHAR(Date, 'YYYY-MM') booking_month, SUM(total_amount) total_revenue
FROM hotel
GROUP BY TO_CHAR(Date, 'YYYY-MM')
ORDER BY total_revenue DESC
LIMIT 1;

--3. Top Hotel Branch by Average occupancy rate
SELECT hotel_branch top_hotel_branch_by_average_occupancy_rate, ROUND(AVG(occupancy_rate)*100, 2) average_occupancy_rate
FROM hotel
GROUP BY hotel_branch
ORDER BY AVG(occupancy_rate) DESC
LIMIT 1;

--CUSTOMER BEHAVIOUR AND SEGMENTATION
--1. The distribution of Customer type
SELECT customer_type, COUNT(customer_type) count_of_customer_type
FROM hotel
GROUP BY customer_type
ORDER BY count_of_customer_type DESC;

--2. Best Customer type by Revenue
SELECT customer_type top_customer_type_by_revenue,  SUM(total_amount) amount_spent
FROM hotel
GROUP BY customer_type
ORDER BY amount_spent DESC
LIMIT 1;

--3. Which room type is most popular among different customer types
WITH RoomCounts AS (
    SELECT 
        customer_type, 
        room_type, 
        COUNT(*) AS bookings
    FROM hotel
    GROUP BY customer_type, room_type
),
RankedRooms AS (
    SELECT 
        customer_type, 
        room_type, 
        bookings,
        RANK() OVER (
            PARTITION BY customer_type 
            ORDER BY bookings DESC
        ) AS rnk
    FROM RoomCounts
)
SELECT customer_type, room_type, bookings
FROM RankedRooms
ORDER BY bookings DESC
LIMIT 1;

--BOOKING SOURCE PERFORMANCE
--1. Top booking source by revenue
SELECT booking_source, SUM(total_amount) booking_source_revenue
FROM hotel
GROUP BY booking_source
ORDER BY booking_source_revenue DESC
LIMIT 1;

--2. Booking source with longest stay
SELECT booking_source booking_channel_with_longest_stay, SUM(nights_stayed) nights_stayed
FROM hotel
GROUP BY booking_source
ORDER BY nights_stayed DESC
LIMIT 1;

--3. Average occupancy rate per booking source
SELECT booking_source booking_source, ROUND(AVG(occupancy_rate)*100, 2) average_occupancy_rate
FROM hotel
GROUP BY booking_source
ORDER BY average_occupancy_rate DESC;

--BRANCH AND REGIONAL INSIGHTS
--1. Branch with the highest average revenue per night
SELECT hotel_branch, ROUND(SUM(total_amount) * 1.0 / SUM(nights_stayed), 2) avg_revenue_per_night
FROM hotel
GROUP BY hotel_branch
ORDER BY avg_revenue_per_night DESC
LIMIT 1;

--2. Branch with the lowest occupancy rate
SELECT hotel_branch, SUM(occupancy_rate) total_occupancy_rate
FROM hotel
GROUP BY hotel_branch
ORDER BY total_occupancy_rate ASC
LIMIT 1;

--3. Countries with high-spending guests
SELECT guest_country country, ROUND(AVG(total_amount), 2) average_amount_spent
FROM hotel
GROUP BY country
ORDER BY average_amount_spent DESC
LIMIT 3;

--ADDITIONAL INSIGHTS
--1. Branches performance using revenue per night stayed
SELECT hotel_branch, SUM(total_amount) total_revenue, SUM(nights_stayed) total_nights,
	ROUND(SUM(total_amount)*1.0/SUM(nights_stayed), 2) average_revenue_per_night
FROM hotel
GROUP BY hotel_branch
ORDER BY average_revenue_per_night DESC;

--OR

SELECT hotel_branch, SUM(total_amount) total_revenue, SUM(nights_stayed) total_nights,
	ROUND(SUM(total_amount)*1.0/SUM(nights_stayed), 2) revenue_per_night,
	RANK() OVER (ORDER BY SUM(total_amount)*1.0/SUM(nights_stayed)DESC) performance_rank
FROM hotel
GROUP BY hotel_branch
ORDER BY performance_rank;

--2. Monthly Revenue Trend using a GROUP BY on the Date
SELECT TO_CHAR(Date, 'YYYY-MM') AS month, SUM(total_amount) monthly_revenue
FROM hotel
GROUP BY TO_CHAR(Date, 'YYYY-MM');

--3. 5 Highest spending customers
SELECT booking_id highest_spending_customers, SUM(total_amount) total_amount_spent
FROM hotel
GROUP BY highest_spending_customers
ORDER BY total_amount_spent DESC
LIMIT 5;

--4. Booking source with the best occupancy rate on average
SELECT booking_source, ROUND(AVG(occupancy_rate)*100, 2) occupancy_rate
FROM hotel
GROUP BY booking_source
ORDER BY occupancy_rate;
